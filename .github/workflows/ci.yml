name: Continuous Integration

on:
  push:
    branches:
      - main
      - 'release/*'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: rootpass
        options: > 
          --health-cmd="mysqladmin ping --silent" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3

    strategy:
      matrix:
        os: [ubuntu-latest]
        compiler: [gcc, clang]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up C++ environment
        uses: actions/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}

      - name: Install Dependencies
        run: sudo apt-get install -y build-essential cmake lcov

      - name: Build Project
        run: |
          mkdir build
          cd build
          cmake ..
          make

      - name: Run Unit Tests
        run: |
          cd build
          ctest --output-on-failure

      - name: Generate Coverage Report
        run: |
          cd build
          lcov --capture --directory . --output-file coverage.info
          lcov --list coverage.info

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: build/coverage.info

      - name: Lint Codebase
        run: |
          sudo apt-get install -y cppcheck
          cppcheck --enable=all --inconclusive --error-exitcode=1 .

  security:
    name: Security Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: sudo apt-get install -y openssl libssl-dev

      - name: Run Security Tests
        run: |
          cppcheck --enable=all --suppress=missingIncludeSystem .

  style:
    name: Code Style Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Linting
        run: |
          sudo apt-get install -y clang-format
          clang-format --style=Google -i **/*.cpp
          git diff --exit-code